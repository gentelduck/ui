{
  "name": "badge",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-slot"
  ],
  "registryDependencies": [
    "tooltip"
  ],
  "root_folder": "registry-ui-components/badge",
  "files": [
    {
      "path": "registry-ui-components/badge/badge.constants.ts",
      "content": "import { cva } from 'class-variance-authority'\n\nexport const badgeVariants = cva(\n  'inline-flex items-center rounded-full border text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n  {\n    variants: {\n      variant: {\n        default: 'border-transparent bg-primary text-primary-foreground hover:bg-primary/80',\n        secondary: 'border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        destructive: 'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80',\n        outline: 'text-foreground',\n        nothing: 'text-accent-foreground border-transparent !px-0',\n      },\n      size: {\n        default: 'px-2.5 py-0.5 text-sm',\n        sm: 'px-1.5 py-0.5 text-[.7rem]',\n        lg: 'px-3.5 py-0.9 text-lg',\n        icon: 'size-[28px] text-sm rounded-full justify-center items-center [&_*]:size-[.9rem]',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  }\n)\n",
      "type": "registry:ui"
    },
    {
      "path": "registry-ui-components/badge/badge.tsx",
      "content": "import * as React from 'react'\n\nimport { Tooltip, TooltipContent, TooltipTrigger } from '@/registry/default/ui'\nimport { BadgeProps } from './badge.types'\nimport { badgeVariants } from './badge.constants'\n\nimport { cn } from '@/lib/utils'\n\nconst Badge = React.forwardRef<HTMLDivElement, BadgeProps>(({ className, variant, size, label, ...props }) => {\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>\n        <div\n          className={cn(badgeVariants({ variant, size }), className)}\n          {...props}\n        />\n      </TooltipTrigger>\n      {label && size === 'icon' && <TooltipContent>{label.children}</TooltipContent>}\n    </Tooltip>\n  )\n})\n\nBadge.displayName = 'Badge'\n\nexport { Badge }\n",
      "type": "registry:ui"
    },
    {
      "path": "registry-ui-components/badge/badge.types.ts",
      "content": "import { VariantProps } from 'class-variance-authority'\nimport { LabelType } from '../button'\nimport { badgeVariants } from './badge.constants'\n\nexport interface BadgeProps extends React.HTMLAttributes<HTMLDivElement>, VariantProps<typeof badgeVariants> {\n  label?: Omit<LabelType, 'showCommand'>\n}\n",
      "type": "registry:ui"
    },
    {
      "path": "registry-ui-components/badge/index.ts",
      "content": "export * from './badge'\nexport * from './badge.constants'\nexport * from './badge.types'\n",
      "type": "registry:ui"
    }
  ]
}