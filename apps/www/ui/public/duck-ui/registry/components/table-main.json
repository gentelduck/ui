{
  "name": "table-main",
  "type": "registry:example",
  "registryDependencies": [
    "table"
  ],
  "root_folder": "registry-examples-components/table",
  "files": [
    {
      "path": "registry-examples-components/table/table-1.tsx",
      "content": "import {\n  PriorityType,\n  StatusType,\n  TableDataType,\n  tableHeaderDropDown,\n} from '@/registry/default/example/TableAdvancedDemo'\nimport { ComboboxType } from '@/registry/default/ui'\nimport {\n  DuckTableFilter,\n  DuckTableBarRightSide,\n  DuckTableProvider,\n  DuckTableSearch,\n  TableBarViewButton,\n  TableHeaderType,\n  DuckTableBarLeftSide,\n  DuckTableHeader,\n  DuckTableBar,\n  DuckTable,\n} from '@/registry/registry-ui-components/table'\nimport {\n  ArrowDownIcon,\n  ArrowRightIcon,\n  ArrowUpIcon,\n  Circle,\n  CircleCheck,\n  CircleHelp,\n  CircleX,\n  Clock12,\n} from 'lucide-react'\n\nexport default function Table1Demo() {\n  return (\n    <>\n      <DuckTableProvider>\n        <DuckTableBar>\n          <DuckTableBarRightSide>\n            <DuckTableSearch\n              input={{\n                trigger: {\n                  placeholder: 'Search...',\n                },\n              }}\n            />\n            <DuckTableFilter filter={combinedFiltersData} />\n          </DuckTableBarRightSide>\n          <DuckTableBarLeftSide>\n            <TableBarViewButton header={columns} />\n          </DuckTableBarLeftSide>\n        </DuckTableBar>\n        <DuckTable>\n          <DuckTableHeader\n            headers={columns}\n            selectable={true}\n          ></DuckTableHeader>\n        </DuckTable>\n      </DuckTableProvider>\n    </>\n  )\n}\n\nconst iconStyle = 'size-4 stroke-[1.5] text-muted-foreground'\n// Assuming you have separate filter arrays for StatusType and PriorityType\nconst filtersDataForStatusType: ComboboxType<keyof TableDataType, StatusType>[] = [\n  {\n    type: 'listbox',\n    trigger: {\n      children: 'status',\n      label: {\n        children: 'Filter Status',\n        showLabel: true,\n        showCommand: true,\n        side: 'top',\n      },\n      command: {\n        label: '⌃+⇧+S',\n        key: 'ctrl+shift+s',\n      },\n    },\n    content: {\n      showSearchInput: true,\n      data: [\n        {\n          label: 'Backlog',\n          element: {\n            icon: {\n              children: CircleHelp,\n              className: iconStyle,\n            },\n          },\n        },\n        {\n          label: 'Todo',\n          element: {\n            icon: {\n              children: Circle,\n              className: iconStyle,\n            },\n          },\n        },\n        {\n          label: 'In Progress',\n          element: {\n            icon: {\n              children: Clock12,\n              className: iconStyle,\n            },\n          },\n        },\n        {\n          label: 'Done',\n          element: {\n            icon: {\n              children: CircleCheck,\n              className: iconStyle,\n            },\n          },\n        },\n        {\n          label: 'Canceled',\n          element: {\n            icon: {\n              children: CircleX,\n              className: iconStyle,\n            },\n          },\n        },\n      ],\n    },\n  },\n]\n\nconst filtersDataForPriorityType: ComboboxType<keyof TableDataType, PriorityType>[] = [\n  {\n    type: 'listbox',\n    trigger: {\n      children: 'priority',\n      label: {\n        children: 'Filter Method',\n        showLabel: true,\n        showCommand: true,\n        side: 'top',\n      },\n      command: {\n        label: '⌃+⇧+M',\n        key: 'ctrl+shift+m',\n      },\n    },\n    content: {\n      showSearchInput: true,\n      data: [\n        {\n          label: 'Low',\n          element: {\n            icon: {\n              children: ArrowDownIcon,\n              className: 'size-4 stroke-[1.5]',\n            },\n          },\n        },\n        {\n          label: 'Medium',\n          element: {\n            icon: {\n              children: ArrowRightIcon,\n              className: 'size-4 stroke-[1.5]',\n            },\n          },\n        },\n        {\n          label: 'High',\n          element: {\n            icon: {\n              children: ArrowUpIcon,\n              className: 'size-4 stroke-[1.5]',\n            },\n          },\n        },\n      ],\n    },\n  },\n]\n\nconst combinedFiltersData = [\n  ...filtersDataForStatusType.map(\n    filter =>\n      ({\n        ...filter,\n        type: 'combobox',\n        onSelect: filter.onSelect,\n      }) as ComboboxType<StatusType | PriorityType, keyof TableDataType>\n  ),\n  ...filtersDataForPriorityType.map(\n    filter =>\n      ({\n        ...filter,\n        type: 'combobox',\n        onSelect: filter.onSelect,\n      }) as ComboboxType<StatusType | PriorityType, keyof TableDataType>\n  ),\n]\n\nconst columns: TableHeaderType<TableDataType>[] = [\n  {\n    label: 'task',\n    sortable: false,\n  },\n  {\n    label: 'title',\n    className: 'w-[110px]',\n    sortable: true,\n    showLabel: true,\n    dropdownMenuOptions: tableHeaderDropDown,\n  },\n  {\n    label: 'label',\n    className: 'w-[90px]',\n    sortable: true,\n    currentSort: 'not sorted',\n    dropdownMenuOptions: tableHeaderDropDown,\n  },\n  {\n    label: 'status',\n    sortable: true,\n    showLabel: true,\n    className: 'w-[70px]',\n    currentSort: 'not sorted',\n    dropdownMenuOptions: tableHeaderDropDown,\n  },\n  {\n    label: 'priority',\n    sortable: true,\n    dropdownMenuOptions: tableHeaderDropDown,\n  },\n]\n",
      "type": "registry:example"
    }
  ]
}