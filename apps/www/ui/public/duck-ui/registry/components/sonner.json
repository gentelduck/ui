{
  "name": "sonner",
  "type": "registry:ui",
  "dependencies": [
    "sonner",
    "next-themes"
  ],
  "registryDependencies": [],
  "root_folder": "registry-ui-components/sonner",
  "files": [
    {
      "path": "registry-ui-components/sonner/index.ts",
      "content": "export * from './sonner'\n",
      "type": "registry:ui"
    },
    {
      "path": "registry-ui-components/sonner/sonner-v2.tsx",
      "content": "'use client'\n\nimport { useTheme } from 'next-themes'\nimport { Toaster as Sonner } from 'sonner'\n\nimport { cn } from '../../../lib/utils'\nimport { StatusIcon } from './../../StatusIcon'\nimport { buttonVariants } from '../button'\n\nexport const SONNER_DEFAULT_DURATION = 4000\n\ntype ToasterProps = React.ComponentProps<typeof Sonner>\n\nconst SonnerToaster = ({ toastOptions, ...props }: ToasterProps) => {\n  const { theme = 'system' } = useTheme()\n\n  return (\n    <Sonner\n      icons={{\n        warning: <StatusIcon variant=\"warning\" />,\n        error: <StatusIcon variant=\"destructive\" />,\n        info: <StatusIcon variant=\"default\" />,\n      }}\n      theme={theme as ToasterProps['theme']}\n      // pointer-events-auto is needed to fix the toast when above radix modals. Set the width to 420px to fix the toast\n      // progress component (bottom row rendered in two lines).\n      className=\"toaster group pointer-events-auto\"\n      // fontFamily: 'inherit' is needed to use the same font as the rest of the app\n      style={{ fontFamily: 'inherit' }}\n      toastOptions={{\n        unstyled: true,\n        classNames: {\n          toast: cn(\n            'group',\n            'toast',\n            'w-full',\n            'rounded-md',\n            'py-3',\n            'px-5',\n            'flex',\n            'gap-2',\n            'items-start',\n            'font-normal',\n            'text-sm',\n            'group-[.toaster]:bg-overlay group-[.toaster]:text-foreground group-[.toaster]:border group-[.toaster]:border-overlay group-[.toaster]:shadow-lg'\n          ),\n          icon: 'mt-0.5',\n          title: '!font-normal',\n          description:\n            'text-xs group-[.toast]:text-foreground-lighter transition-opacity group-data-[expanded=false]:opacity-0 group-data-[front=true]:!opacity-100',\n          actionButton: cn('block', buttonVariants({ type: 'primary', size: 'tiny' })),\n          cancelButton: cn('block', buttonVariants({ type: 'default', size: 'tiny' })),\n          // success: 'group toast group-[.toaster]:!bg-brand-200 group-[.toaster]:border-brand-500',\n          warning: 'group toast group-[.toaster]:!bg-warning-200 group-[.toaster]:!border-warning-500',\n          error: 'group toast group-[.toaster]:!bg-destructive-200 group-[.toaster]:!border-destructive-500',\n          closeButton: cn(\n            // unset all styles set from sonner\n            'absolute right-2 top-2 rounded-md text-foreground/50 opacity-0 transition-opacity',\n            'hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100',\n            'group-[.destructive]:text-destructive-300 group-[.destructive]:hover:text-destructive-50',\n            'group-[.destructive]:focus:ring-destructive-400 group-[.destructive]:focus:ring-offset-destructive-600',\n            'left-auto transform-none bg-transparent border-0 border-transparent hover:!bg-transparent hover:border-transparent'\n          ),\n          content: 'grow',\n          //group-[.toaster]:bg-overlay group-[.toaster]:text-foreground group-[.toaster]:border group-[.toaster]:border-overlay\n        },\n        duration: SONNER_DEFAULT_DURATION,\n        closeButton: true,\n        ...toastOptions,\n      }}\n      cn={cn}\n      {...props}\n    />\n  )\n}\n\nexport { SonnerToaster }\n",
      "type": "registry:ui"
    },
    {
      "path": "registry-ui-components/sonner/sonner.tsx",
      "content": "'use client'\n\nimport { useTheme } from 'next-themes'\nimport { Toaster as Sonner } from 'sonner'\n\ntype ToasterProps = React.ComponentProps<typeof Sonner>\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = 'system' } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps['theme']}\n      className=\"toaster group\"\n      toastOptions={{\n        classNames: {\n          toast:\n            'group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg',\n          description: 'group-[.toast]:text-muted-foreground',\n          actionButton: 'group-[.toast]:bg-primary group-[.toast]:text-primary-foreground',\n          cancelButton: 'group-[.toast]:bg-muted group-[.toast]:text-muted-foreground',\n        },\n      }}\n      {...props}\n    />\n  )\n}\n\nexport { Toaster as DefaultSonner }\n",
      "type": "registry:ui"
    }
  ]
}