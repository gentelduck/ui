{
  "name": "toggle",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-toggle"
  ],
  "registryDependencies": [],
  "root_folder": "registry-ui-components/toggle",
  "files": [
    {
      "path": "registry-ui-components/toggle/index.ts",
      "content": "export * from './toggle'\nexport * from './toggle.constants'\n",
      "type": "registry:ui"
    },
    {
      "path": "registry-ui-components/toggle/toggle.constants.ts",
      "content": "import { cva } from 'class-variance-authority'\n\nexport const toggleVariants = cva(\n  'inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2',\n  {\n    variants: {\n      variant: {\n        default: 'bg-transparent',\n        outline: 'border border-input bg-transparent hover:bg-accent hover:text-accent-foreground',\n      },\n      size: {\n        default: 'h-10 px-3 min-w-10',\n        sm: 'h-9 px-2.5 min-w-9',\n        lg: 'h-11 px-5 min-w-11',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  }\n)\n",
      "type": "registry:ui"
    },
    {
      "path": "registry-ui-components/toggle/toggle.tsx",
      "content": "'use client'\n\nimport * as React from 'react'\nimport * as TogglePrimitive from '@radix-ui/react-toggle'\nimport { type VariantProps } from 'class-variance-authority'\n\nimport { cn } from '@/lib/utils'\nimport { toggleVariants } from './toggle.constants'\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> & VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle }\n",
      "type": "registry:ui"
    }
  ]
}