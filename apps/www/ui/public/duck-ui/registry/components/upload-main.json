{
  "name": "upload-main",
  "type": "registry:example",
  "registryDependencies": [
    "upload"
  ],
  "root_folder": "registry-examples-components/upload",
  "files": [
    {
      "path": "registry-examples-components/upload/upload-1.tsx",
      "content": "'use client'\n\nimport React from 'react'\nimport {\n  UploadAdvancedProvider,\n  UploadAdnvacedContent,\n  UploadAdvancedHeader,\n  FolderType,\n  FileType,\n} from '@/registry/registry-ui-components/upload'\nimport { uuidv7 } from 'uuidv7'\nimport { randFileName, randFileType, randNumber, randUuid } from '@ngneat/falso'\n\n// Example random attachment URLs\nconst randomAttachments = [\n  'https://images.pexels.com/photos/30149547/pexels-photo-30149547/free-photo-of-classic-muscle-cars-racing-on-turkish-highway.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1',\n  'https://images.pexels.com/photos/30147400/pexels-photo-30147400/free-photo-of-winter-street-view-in-palu-elazig-turkiye.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1',\n  'https://images.pexels.com/photos/30151773/pexels-photo-30151773/free-photo-of-sunset-street-scene-with-palm-trees-and-bookstore.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1',\n  'https://images.pexels.com/photos/30151708/pexels-photo-30151708/free-photo-of-bustling-hollywood-boulevard-street-scene.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1',\n  'https://images.pexels.com/photos/30166411/pexels-photo-30166411/free-photo-of-vibrant-yellow-sports-car-on-sunny-day.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1',\n  'https://images.pexels.com/photos/337909/pexels-photo-337909.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1',\n  'https://images.pexels.com/photos/799443/pexels-photo-799443.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1',\n  'https://images.pexels.com/photos/18003063/pexels-photo-18003063/free-photo-of-a-blue-porsche-car-parked-on-the-street.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1',\n  'https://images.pexels.com/photos/1077785/pexels-photo-1077785.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1',\n  'https://images.pexels.com/photos/2434625/pexels-photo-2434625.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1',\n]\n\n// -----------------------------------------------------------------------------------------------\n// NOTE: Generator for dummy data.\nconst generateFile = (treeLevel: number): FileType => {\n  const fileName = randFileName()\n  const fileType = 'image/png' // You can modify this to randomly generate file types if needed\n  const randomUrl = randomAttachments[Math.floor(Math.random() * randomAttachments.length)] // Randomly select URL from randomAttachments\n\n  return {\n    id: uuidv7(),\n    name: fileName,\n    size: '1MB',\n    file: new File([], fileName),\n    type: fileType,\n    url: randomUrl,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    treeLevel, // Pass the treeLevel for file\n  }\n}\n\nconst MAX_DEPTH = 3 // Set a maximum depth for folder nesting\n\nconst generateFolder = (level: number): FolderType => {\n  const folderName = randFileName().split('.')[0]\n  const numFiles = randNumber({ min: 9, max: 15 }) // Random number of files\n  const numNestedFolders = level < MAX_DEPTH ? randNumber({ min: 3, max: 7 }) : 0 // Limit nested folders based on depth\n\n  const content: (FileType | FolderType)[] = []\n\n  // Generate files with the current tree level\n  for (let i = 0; i < numFiles; i++) {\n    content.push(generateFile(level)) // Pass current level to files\n  }\n\n  // Generate nested folders if not at max depth\n  for (let i = 0; i < numNestedFolders; i++) {\n    content.push(generateFolder(level + 1)) // Pass incremented level to nested folders\n  }\n\n  return {\n    id: randUuid(),\n    name: folderName,\n    files: content.length,\n    content,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    treeLevel: level, // Assign the current level to the folder\n  }\n}\n\n// Generate the root folder with a set number of subfolders\nconst attachments: FolderType[] = Array.from({ length: 10 }, (_, i) => generateFolder(1)) // Start with level 1 for the root folder\n\nexport default function Upload4Demo() {\n  console.log('Attachments:', attachments)\n  return (\n    <>\n      <UploadAdvancedProvider\n        attachments={attachments} // Pass generated attachments here\n        currentBucket=\"wildduck_attachments\"\n      >\n        <UploadAdvancedHeader />\n        <UploadAdnvacedContent />\n      </UploadAdvancedProvider>\n    </>\n  )\n}\n",
      "type": "registry:example"
    }
  ]
}