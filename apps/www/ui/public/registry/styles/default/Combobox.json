{
  "name": "Combobox",
  "dependencies": [
    "Command",
    "Tooltip",
    "Button"
  ],
  "files": [
    {
      "name": "Combobox.tsx",
      "content": "'use client'\nimport React from 'react'\n\nimport {\n  Button,\n  Command,\n  CommandInput,\n  CommandListGroup,\n  CommandListGroupDataType,\n  CommandType,\n  Label,\n  LabelType,\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from '@/registry/default/ui'\n\nimport { cn } from '@/lib'\nimport { ChevronsUpDown } from 'lucide-react'\n\ntype ComboboxType = {\n  title?: string\n  className?: ClassNameType\n  data: CommandListGroupDataType[]\n  command?: CommandType\n  label?: LabelType\n}\n\ninterface ClassNameType {\n  wrapper?: string\n  trigger?: string\n  content?: string\n}\n\nconst Combobox: React.FC<ComboboxType> = ({ data, className, title, command, label }) => {\n  //NOTE: you can use state management lib instead of this local states to use it globally\n  const [value, setValue] = React.useState<string>('')\n  const [open, setOpen] = React.useState(false)\n\n  return (\n    <>\n      <div className={cn('', className?.wrapper)}>\n        {title && <Label htmlFor={title}>{title}</Label>}\n        <Popover\n          open={open}\n          onOpenChange={setOpen}\n        >\n          <PopoverTrigger asChild>\n            <Button\n              variant=\"outline\"\n              disabled={false}\n              role=\"combobox\"\n              secondIcon={<ChevronsUpDown className=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />}\n              aria-expanded={open}\n              className={cn(`w-[200px] justify-between capitalize`, className?.trigger)}\n              label={{ children: 'sdf', showLabel: true, side: 'top', ...label }}\n              command={{ ...command, action: () => setOpen(!open) } as CommandType}\n            >\n              <span className=\"truncate\">{value ? value : 'Select one...'}</span>\n            </Button>\n          </PopoverTrigger>\n          <PopoverContent\n            className={cn('w-[200px] p-0 h-[245px]', className?.content)}\n            id={title}\n          >\n            <Command>\n              <CommandInput\n                placeholder=\"Search one...\"\n                required\n              />\n              <CommandListGroup\n                data={data}\n                selected={['']}\n                groupheading={['Group heading']}\n                onSelect={(value: string | undefined) => {\n                  setOpen(false)\n                  setValue(value || '')\n                }}\n              />\n            </Command>\n          </PopoverContent>\n        </Popover>\n      </div>\n    </>\n  )\n}\n\nCombobox.displayName = 'Combobox'\n\nexport { Combobox, type ComboboxType, type ClassNameType }\n"
    }
  ],
  "type": "components:ui"
}