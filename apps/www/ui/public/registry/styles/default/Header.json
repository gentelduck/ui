{
  "name": "Header",
  "dependencies": [
    "NavGroup"
  ],
  "files": [
    {
      "name": "Header.tsx",
      "content": "'use client'\n\nimport React from 'react'\n\nimport { Separator, NavCollabsedType, NavGroup, NavGroupProps, NavType } from '@/registry/default/ui'\n\nimport { cn, filteredObject } from '@/lib/utils'\n\ntype HeaderProps<T extends boolean> = {\n  header: HeaderType\n  nav: NavGroupProps<T>\n  logo?: React.ReactElement\n  footer?: FooterType\n}\n\ninterface HeaderType extends React.HtmlHTMLAttributes<HTMLDivElement> {\n  isCollabsed?: boolean\n  position?: 'side' | 'top'\n}\n\ntype FooterType = {\n  buttons: React.ReactNode[]\n}\n\nconst Header = <T extends boolean>({ nav, header, logo, footer }: HeaderProps<T>) => {\n  const { className, position, ...props } = header\n  const navIsCollabsed = (header as NavCollabsedType).isCollabsed || false\n  const filteredKeys = filteredObject(['isCollabsed'], header)\n\n  return (\n    <header\n      {...filteredKeys}\n      className={cn(\n        'py-2 flex',\n        position === 'side' ? 'flex-col h-full' : position === 'top' ? 'items-center' : '',\n        className\n      )}\n      {...props}\n    >\n      {logo && logo}\n      {position === 'side' && <Separator className=\"my-1\" />}\n      <NavGroup<T>\n        position={position}\n        nav={{ ...nav.nav, isCollabsed: navIsCollabsed } as NavType<true>}\n        navigationKeys={nav.navigationKeys}\n      />\n\n      {position === 'side' && <Separator className=\"my-1\" />}\n      <div>{footer && footer.buttons.map((button, idx) => <React.Fragment key={idx}>{button}</React.Fragment>)} </div>\n    </header>\n  )\n}\n\nHeader.displayName = 'Header'\n\nexport { Header, type HeaderProps, type HeaderType, type FooterType }\n"
    }
  ],
  "type": "components:ui"
}