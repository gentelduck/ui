{
  "name": "DuckBadge",
  "dependencies": [],
  "files": [
    {
      "name": "DuckBadge.tsx",
      "content": "import * as React from 'react'\nimport { cva, type VariantProps } from 'class-variance-authority'\n\nimport { cn } from '@/lib/utils'\nimport { DuckTooltip, DuckTooltipContent, DuckTooltipTrigger } from './DuckTooltip'\nimport { LabelType } from './DuckButton'\n\nconst badgeVariants = cva(\n  'inline-flex items-center rounded-full border text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n  {\n    variants: {\n      variant: {\n        default: 'border-transparent bg-primary text-primary-foreground hover:bg-primary/80',\n        secondary: 'border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        destructive: 'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80',\n        outline: 'text-foreground',\n      },\n      size: {\n        default: 'px-2.5 py-0.5 text-sm',\n        sm: 'px-1.5 py-0.5 text-[.7rem]',\n        lg: 'px-3.5 py-0.9 text-lg',\n        icon: 'size-[28px] text-sm rounded-full justify-center items-center [&_*]:size-[.9rem]',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  }\n)\n\nexport interface DuckBadgeProps extends React.HTMLAttributes<HTMLDivElement>, VariantProps<typeof badgeVariants> {\n  label?: LabelType\n}\n\nfunction DuckBadge({ className, variant, size, label, ...props }: DuckBadgeProps) {\n  return (\n    <DuckTooltip>\n      <DuckTooltipTrigger asChild>\n        <div\n          className={cn(badgeVariants({ variant, size }), className)}\n          {...props}\n        />\n      </DuckTooltipTrigger>\n      {label && size === 'icon' && (\n        <DuckTooltipContent>{label.children as unknown as React.ReactNode}</DuckTooltipContent>\n      )}\n    </DuckTooltip>\n  )\n}\n\nexport { DuckBadge, badgeVariants }\n"
    }
  ],
  "type": "components:ui"
}