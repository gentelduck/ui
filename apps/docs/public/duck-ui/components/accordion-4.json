{
  "name": "accordion-4",
  "type": "registry:example",
  "registryDependencies": [
    "accordion"
  ],
  "root_folder": "accordion",
  "files": [
    {
      "path": "accordion/accordion-4.tsx",
      "content": "import {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from '@gentelduck/registry-ui-duckui/accordion'\nimport { Plus } from 'lucide-react'\n\nexport default function Accordion1Demo() {\n  return (\n    <Accordion type='multiple' className='w-full'>\n      <AccordionItem value='item-1'>\n        <AccordionTrigger className='hover:no-underline' icon={<Plus />}>\n          Is it accessible?\n        </AccordionTrigger>\n        <AccordionContent>\n          Yes. This accordion is built following the WAI-ARIA design patterns to\n          ensure accessibility for users with disabilities. Each trigger is\n          keyboard-navigable, and the content is properly associated with its\n          trigger for screen readers. This makes it usable across a wide range\n          of devices and assistive technologies.\n        </AccordionContent>\n      </AccordionItem>\n      <AccordionItem value='item-2'>\n        <AccordionTrigger className='hover:no-underline' icon={<Plus />}>\n          Is it styled?\n        </AccordionTrigger>\n        <AccordionContent>\n          Yes. The accordion comes with a modern and clean default styling that\n          seamlessly integrates with other UI components in the registry. You\n          can also customize the styles with utility classes or by overriding\n          the default class names, ensuring it matches the aesthetic of your\n          application.\n        </AccordionContent>\n      </AccordionItem>\n      <AccordionItem value='item-3'>\n        <AccordionTrigger className='hover:no-underline' icon={<Plus />}>\n          Is it animated?\n        </AccordionTrigger>\n        <AccordionContent>\n          Yes. By default, the accordion includes smooth and responsive\n          animations for expanding and collapsing content. These animations\n          provide a visually appealing user experience, while also making the\n          state transitions more intuitive. If you prefer, the animations can be\n          disabled or replaced with your own custom effects.\n        </AccordionContent>\n      </AccordionItem>\n      <AccordionItem value='item-4'>\n        <AccordionTrigger className='hover:no-underline' icon={<Plus />}>\n          How customizable is it?\n        </AccordionTrigger>\n        <AccordionContent>\n          The accordion is highly customizable. You can modify its behavior,\n          appearance, and animations through props, custom styles, and utility\n          classes. Whether you need to adjust the spacing, colors, or even\n          change the way it functions, the accordion is designed to be flexible\n          and adaptable to your project's needs.\n        </AccordionContent>\n      </AccordionItem>\n      <AccordionItem value='item-5'>\n        <AccordionTrigger className='hover:no-underline' icon={<Plus />}>\n          What are some use cases for this component?\n        </AccordionTrigger>\n        <AccordionContent>\n          Accordions are versatile and can be used in a variety of scenarios,\n          such as:\n          <ul className='list-disc ml-5 mt-2'>\n            <li>FAQ sections to organize questions and answers.</li>\n            <li>Collapsible menus or sub-menus in navigation systems.</li>\n            <li>\n              Displaying content-heavy sections in a compact way, such as\n              product details or documentation.\n            </li>\n            <li>\n              Interactive forms where users can expand and fill sections as\n              needed.\n            </li>\n          </ul>\n        </AccordionContent>\n      </AccordionItem>\n    </Accordion>\n  )\n}\n",
      "type": "registry:example",
      "target": "components/accordion-4.tsx"
    }
  ],
  "source": "/registry-examples-duckui/src/accordion"
}