{
  "name": "button",
  "type": "registry:ui",
  "dependencies": [],
  "registryDependencies": ["slot"],
  "root_folder": "button",
  "files": [
    {
      "path": "button/button.constants.ts",
      "content": "import { cva } from 'class-variance-authority'\n\nexport const buttonVariants = cva(\n  'relative inline-flex items-center justify-center whitespace-nowrap text-sm font-medium ring-offset-background transition-colors focus-visible:outline-hidden focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 font-regular cursor-pointer',\n  {\n    variants: {\n      variant: {\n        default:\n          'bg-primary text-primary-foreground hover:bg-primary/90 shadow-sm',\n        destructive:\n          'bg-destructive/90 hover:bg-destructive/70  text-destructive-foreground shadow-xs',\n        warning:\n          'bg-warning/90 hover:bg-warning/70 text-warning-foreground shadow-xs',\n        outline:\n          'border border-input text-accent-foreground bg-background hover:bg-accent hover:text-accent-foreground shadow-xs',\n        dashed:\n          'border border-dashed border-input text-accent-foreground bg-background hover:bg-accent/50 hover:text-accent-foreground shadow-xs',\n        secondary:\n          'bg-secondary text-secondary-foreground hover:bg-secondary/80 shadow-xs',\n        ghost:\n          'hover:bg-accent text-accent-foreground hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline',\n        expand_icon:\n          'group relative text-primary-foreground bg-primary hover:bg-primary/90',\n        ring_hover:\n          'bg-primary text-primary-foreground transition-all duration-300 hover:bg-primary/90 hover:ring-2 hover:ring-primary/90 hover:ring-offset-2',\n        shine:\n          'text-primary-foreground animate-shine bg-gradient-to-r from-primary via-primary/75 to-primary bg-[length:400%_100%] ',\n        gooey_right:\n          'text-primary-foreground relative bg-primary z-0 overflow-hidden transition-all duration-500 before:absolute before:inset-0 before:-z-10 before:translate-x-[150%] before:translate-y-[150%] before:scale-[2.5] before:rounded-[100%] before:bg-gradient-to-r from-zinc-400 before:transition-transform before:duration-1000  hover:before:translate-x-[0%] hover:before:translate-y-[0%] ',\n        gooey_left:\n          'text-primary-foreground relative bg-primary z-0 overflow-hidden transition-all duration-500 after:absolute after:inset-0 after:-z-10 after:translate-x-[-150%] after:translate-y-[150%] after:scale-[2.5] after:rounded-[100%] after:bg-gradient-to-l from-zinc-400 after:transition-transform after:duration-1000  hover:after:translate-x-[0%] hover:after:translate-y-[0%] ',\n        link_hover1:\n          'relative after:absolute after:bg-primary after:bottom-2 after:h-[1px] after:w-2/3 after:origin-bottom-left after:scale-x-100 hover:after:origin-bottom-right hover:after:scale-x-0 after:transition-transform after:ease-in-out after:duration-300',\n        link_hover2:\n          'relative after:absolute after:bg-primary after:bottom-2 after:h-[1px] after:w-2/3 after:origin-bottom-right after:scale-x-0 hover:after:origin-bottom-left hover:after:scale-x-100 after:transition-transform after:ease-in-out after:duration-300',\n        nothing: '',\n      },\n      size: {\n        icon: 'text-base size-[2em] p-0 [&_svg]:size-[1.1em] rounded-md',\n        xs: 'h-6 px-2 py-1 text-xs [&_svg]:size-[1.3em] rounded-sm',\n        sm: 'h-8 px-3 py-1.5 text-sm [&_svg]:size-[1.3em] rounded-md',\n        default: 'h-9 px-4 py-2 text-base [&_svg]:size-[1.3em] rounded-md',\n        lg: 'h-10 px-6 py-2.5 text-lg [&_svg]:size-[1.3em] rounded-md',\n        xl: 'h-12 px-8 py-3 text-xl [&_svg]:size-[1.3em] rounded-lg',\n        '2xl': 'h-14 px-10 py-3.5 text-2xl [&_svg]:size-[1.3em] rounded-lg',\n        '3xl': 'h-16 px-12 py-4 text-3xl [&_svg]:size-[1.3em] rounded-lg',\n      },\n      border: {\n        default: '',\n        primary: 'border border-border/40 hover:border-border/80',\n        secondary:\n          'border border-secondary/40 hover:border-secondary bg-secondary/40 hover:bg-secondary/65',\n        destructive:\n          'border border-destructive/40 hover:border-destructive bg-destructive/40 hover:bg-destructive/65',\n        warning:\n          'border border-warning/40 hover:border-warning bg-warning/40 hover:bg-warning/65',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n      border: 'default',\n    },\n  },\n)\n",
      "type": "registry:ui",
      "target": "components/ui/button.constants.ts"
    },
    {
      "path": "button/button.tsx",
      "content": "import * as React from 'react'\r\n\r\nimport { buttonVariants } from './button.constants'\r\nimport { ButtonProps } from './button.types'\r\n\r\nimport { cn } from '@gentleduck/libs/cn'\r\nimport { Loader } from 'lucide-react'\r\n\r\n/**\r\n * Renders a customizable button component, supporting various styles and behaviors.\r\n *\r\n * @param {ButtonProps} props - The props for the button component.\r\n * @param {React.ReactNode} [props.children] - The content to be displayed inside the button.\r\n * @param {string} [props.variant] - The visual style variant of the button.\r\n * @param {string} [props.size] - The size of the button, can be overridden to 'icon' if collapsed.\r\n * @param {string} [props.border] - The border style of the button.\r\n * @param {boolean} [props.asChild] - If true, renders the button as a child component.\r\n * @param {string} [props.className] - Additional custom class names for styling.\r\n * @param {object} [props.label] - Configuration for the button's label, including display options.\r\n * @param {boolean} [props.loading] - Indicates if the button should show a loading spinner.\r\n * @param {boolean} [props.isCollapsed] - If true, the button is rendered in a collapsed state.\r\n * @param {React.ReactNode} [props.icon] - An icon to be displayed inside the button.\r\n * @param {React.ReactNode} [props.secondIcon] - An optional second icon inside the button.\r\n * @param {object} [props.animationIcon] - Configuration for an animated icon, including placement.\r\n * @param {React.Ref<HTMLButtonElement>} [props.ref] - A ref to the button element.\r\n * @param {object} [...props] - Additional props pdocsassed to the button component.\r\n *\r\n * @returns {JSX.Element} A button element with the specified configurations.\r\n */\r\nfunction Button({\r\n  children,\r\n  variant,\r\n  size,\r\n  border,\r\n  asChild,\r\n  className,\r\n  loading,\r\n  isCollapsed,\r\n  icon,\r\n  secondIcon,\r\n  animationIcon,\r\n  ref,\r\n  ...props\r\n}: ButtonProps & { ref?: React.Ref<HTMLButtonElement> }): JSX.Element {\r\n  const Component = (asChild ? Slot : 'button') as React.ElementType\r\n\r\n  const Button = (\r\n    <Component\r\n      {...props}\r\n      ref={ref}\r\n      className={cn(\r\n        buttonVariants({\r\n          variant,\r\n          size: isCollapsed ? 'icon' : size,\r\n          border,\r\n          className,\r\n        }),\r\n      )}\r\n      disabled={loading}\r\n    >\r\n      <div className='flex items-center gap-2'>\r\n        {animationIcon?.icon && animationIcon.iconPlacement === 'left' && (\r\n          <div className='w-0 translate-x-[-1.3em] pr-0 opacity-0 transition-all duration-200 group-hover:w-5 group-hover:-translate-x-1 group-hover:pr-2 group-hover:opacity-100'>\r\n            {animationIcon?.icon}\r\n          </div>\r\n        )}\r\n        {!loading ? icon : <Loader className='animate-spin' />}\r\n        {!isCollapsed && size !== 'icon' && children}\r\n        {!isCollapsed && secondIcon && secondIcon}\r\n        {animationIcon?.icon && animationIcon.iconPlacement === 'right' && (\r\n          <div className='w-0 translate-x-[1.3em] pl-0 opacity-0 transition-all duration-200 group-hover:w-5 group-hover:translate-x-0 group-hover:pl-2 group-hover:opacity-100'>\r\n            {animationIcon?.icon}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Component>\r\n  )\r\n\r\n  return Button\r\n}\r\n\r\n/**\r\n * A simple utility component that allows passing a JSX element as a prop\r\n * and renders it with the passed props. If the passed element is not a JSX\r\n * element, it wraps it in a `div` component.\r\n *\r\n * @param {React.HTMLProps<HTMLDivElement>} [props] - The props to be passed to the rendered element.\r\n * @param {React.ReactNode} [props.children] - The JSX element or node to be rendered.\r\n * @param {React.HTMLProps<HTMLDivElement>} [...props] - Additional props to be passed to the rendered element.\r\n *\r\n * @returns {JSX.Element} The rendered element with the passed props.\r\n */\r\nfunction Slot({\r\n  children,\r\n  ...props\r\n}: React.HTMLProps<HTMLDivElement>): JSX.Element {\r\n  if (!React.isValidElement(children)) {\r\n    return <div {...props}>{children}</div>\r\n  }\r\n\r\n  return React.cloneElement(children, {\r\n    ...props,\r\n    ...(children as React.JSX.Element).props,\r\n  })\r\n}\r\n\r\nexport { Button, Slot }\r\n",
      "type": "registry:ui",
      "target": "components/ui/button.tsx"
    },
    {
      "path": "button/button.types.ts",
      "content": "import { VariantProps } from 'class-variance-authority'\nimport { buttonVariants } from './button.constants'\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n  isCollapsed?: boolean\n  loading?: boolean\n  icon?: React.ReactNode\n  secondIcon?: React.ReactNode\n  animationIcon?: {\n    icon?: React.ReactNode\n    iconPlacement?: 'left' | 'right'\n  }\n}\n",
      "type": "registry:ui",
      "target": "components/ui/button.types.ts"
    },
    {
      "path": "button/index.ts",
      "content": "export * from \"./button\";\nexport * from \"./button.types\";\nexport * from \"./button.constants\";\n",
      "type": "registry:ui",
      "target": "components/ui/index.ts"
    }
  ],
  "source": "/registry-ui-duckui/src/button"
}
