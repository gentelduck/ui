{
  "name": "hover-card",
  "type": "registry:ui",
  "dependencies": [],
  "registryDependencies": [],
  "root_folder": "hover-card",
  "files": [
    {
      "path": "hover-card/hover-card.tsx",
      "content": "'use client'\n\nimport { cn } from '@gentleduck/libs/cn'\nimport * as HoverCardPrimitive from '@radix-ui/react-hover-card'\nimport * as React from 'react'\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = 'center', sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      'z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-hidden data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n      className,\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\n// HoverCardCustomView\nexport interface HoverCardCustomViewProps {\n  wrapper?: React.ComponentPropsWithoutRef<typeof HoverCard>\n  trigger?: React.ComponentPropsWithoutRef<typeof HoverCardTrigger>\n  content?: React.ComponentPropsWithoutRef<typeof HoverCardContent>\n}\n\nconst HoverCardCustomView: React.FC<HoverCardCustomViewProps> = ({\n  content,\n  trigger,\n  wrapper,\n}) => {\n  const {\n    className: triggerClassName,\n    key: triggerKey,\n    children: triggerChildren,\n    ...triggerProps\n  } = trigger ?? {}\n  const {\n    className: contentClassName,\n    key: contentKey,\n    children: contentChildren,\n    ...contentProps\n  } = content ?? {}\n\n  return (\n    <HoverCard {...wrapper}>\n      <HoverCardTrigger className={cn('', triggerClassName)} {...triggerProps}>\n        {triggerChildren}\n      </HoverCardTrigger>\n      <HoverCardContent\n        className={cn('w-80', contentClassName)}\n        {...contentProps}\n      >\n        {contentChildren}\n      </HoverCardContent>\n    </HoverCard>\n  )\n}\nHoverCardCustomView.displayName = 'HoverCardCustomView'\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent, HoverCardCustomView }\n",
      "type": "registry:ui",
      "target": "components/ui/hover-card.tsx"
    },
    {
      "path": "hover-card/index.ts",
      "content": "export * from './hover-card'\n",
      "type": "registry:ui",
      "target": "components/ui/index.ts"
    }
  ],
  "source": "/registry-ui-duckui/src/hover-card"
}
